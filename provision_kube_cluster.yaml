---
- name: Add soft on kubernetes VM
  become: true
  hosts:
    - kube_manager
    - kube_nodes
  vars:
    # kubectl_version: "1.31.1-1.1"
    # kube_version_full: "1.31.1-1.1"
    # kube_version: "1.31"
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.bridge.bridge-nf-call-ip6tables: 1
      net.bridge.bridge-nf-call-iptables: 1
  tasks:
    - name: Install packages | {{ inventory_hostname }}
        ansible.builtin.package:
          name:
            - apt-transport-https
            - ca-certificates
            - curl
            - gpg
          state: present
    - name: Add Kubernetes GPG key | {{ inventory_hostname }}
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'
        force: true
    - name: Add Kubernetes repository | {{ inventory_hostname }}
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v{{ kube_version }}/deb/ /"
        state: present
        update_cache: true
    - name: Install packages | {{ inventory_hostname }}
      ansible.builtin.package:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        state: present
    - name: Hold version | {{ inventory_hostname }}
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items:
        - kubeadm
        - kubelet
        - kubectl
    - name: Load modules overlay and br_netfilter
      community.general.modprobe:
        name: overlay
        state: present
      with_items:
        - overlay
        - br_netfilter
    - name: Load modprobe
      ansible.builtin.shell:
        cmd: modprobe {{ item }}
      with_items:
        - overlay
        - br_netfilter
    - name: Configure systctl
      ansible.posix.sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        sysctl_file: /etc/sysctl.d/kubernetes.conf
      with_dict: '{{ sysctl_config }}'
    - name: Configure crictl tools config
      ansible.builtin.copy:
        src: files/crictl.yaml
        dest: /etc/
        owner: root
        group: root
        mode: 0644
    - name: Check swap State
      ansible.builtin.stat:
        path: /swap.img
      register: swap_file_check
    - name: Unmount swap | {{ inventory_hostname }}
      ansible.builtin.shell:
        cmd: swapoff -a
      when: ansible_swaptotal_mb > 0
    - name: Disable swap | {{ inventory_hostname }}
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '\sswap\s+sw\s+'
        state: absent
      when: swap_file_check.stat.exists
    - name: Delete swap file
      ansible.builtin.file:
        path: /swap.img
        state: absent
      when: swap_file_check.stat.exists
    - name: Create containerd folder
      ansible.builtin.file:
        name: /etc/containerd/
        owner: root
        group: root
        mode: 0644
        state: directory
    - name: Delete Container default config
      ansible.builtin.copy:
        src: files/config.toml
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: 0644
      notify: Restart containerd
  handlers:
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted